name: Build OpenJDK for Windows ARM64

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight UTC
  workflow_dispatch:    # Allow manual triggering

jobs:
  build:
    runs-on: windows-2022  # Windows x64 runner for cross-compilation

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Cygwin
      uses: cygwin/cygwin-install-action@master
      with:
        packages: autoconf make unzip zip git

    - name: Install Visual Studio with ARM64 tools
      run: |
        Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "vs_buildtools.exe"
        Start-Process -Wait -FilePath "vs_buildtools.exe" -ArgumentList "--quiet --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.Tools.ARM64 --add Microsoft.VisualStudio.Component.VC.CMake.Project --includeRecommended"

    - name: Clone OpenJDK repository
      run: |
        git clone https://git.openjdk.org/jdk.git
        cd jdk
        $tags = git tag --list 'jdk-*'
        $stableTags = $tags | Where-Object { $_ -match 'jdk-(\d+)\+(\d+)' -and [int]$matches[1] -ge 23 }
        $latestTag = $stableTags | Sort-Object -Descending { [version]($matches[1] + '.' + $matches[2]) } | Select-Object -First 1
        if (-not $latestTag) {
          Write-Error "No stable tag found for OpenJDK 23 or later"
          exit 1
        }
        git checkout $latestTag
        $version = $latestTag -replace 'jdk-(\d+).*', '$1'
        echo "VERSION=$version" >> $env:GITHUB_ENV

    - name: Determine Boot JDK version
      run: |
        $bootJdkVersion = [int]$env:VERSION - 1
        if ([int]$bootJdkVersion -lt 22) {
          Write-Error "Boot JDK version ($bootJdkVersion) is less than 22, which is not supported"
          exit 1
        }
        echo "BOOT_JDK_VERSION=$bootJdkVersion" >> $env:GITHUB_ENV

    - name: Get Boot JDK download link
      run: |
        $downloadPage = Invoke-WebRequest -Uri "https://jdk.java.net/$env:BOOT_JDK_VERSION/"
        $downloadPage.Links | ForEach-Object { Write-Output "Found link: $($_.href)" }
        $link = $downloadPage.Links | Where-Object { $_.href -like "*jdk-$env:BOOT_JDK_VERSION*_windows-x64_bin.zip" -or $_.href -like "*openjdk-$env:BOOT_JDK_VERSION*_windows-x64_bin.zip" } | Select-Object -First 1
        if (-not $link) {
          Write-Error "Boot JDK URL not found for version $env:BOOT_JDK_VERSION on jdk.java.net/$env:BOOT_JDK_VERSION/. Check the logged links above for available options."
          exit 1
        }
        $bootJdkUrl = $link.href
        echo "BOOT_JDK_URL=$bootJdkUrl" >> $env:GITHUB_ENV

    - name: Download Boot JDK
      run: |
        Invoke-WebRequest -Uri "$env:BOOT_JDK_URL" -OutFile "jdk-$env:BOOT_JDK_VERSION.zip"
        Expand-Archive -Path "jdk-$env:BOOT_JDK_VERSION.zip" -DestinationPath "C:\Program Files (Arm)\Microsoft\jdk-$env:BOOT_JDK_VERSION"

    - name: Configure Visual Studio environment for ARM64
      run: |
        cmd /c "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" x64_arm64

    - name: Configure OpenJDK build
      shell: bash
      run: |
        cd jdk
        ./configure --with-boot-jdk="/cygdrive/c/Program Files (Arm)/Microsoft/jdk-$env:BOOT_JDK_VERSION" --openjdk-target=aarch64-w64-mingw32

    - name: Build OpenJDK
      run: |
        cd jdk
        make images CONF=windows-aarch64-server-release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: openjdk-${{ env.VERSION }}-windows-arm64
        path: jdk/build/windows-aarch64-server-release/images/jdk