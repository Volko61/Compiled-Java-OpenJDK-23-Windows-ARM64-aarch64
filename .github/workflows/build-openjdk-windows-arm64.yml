name: Build OpenJDK for Windows ARM64

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-2022  # Windows x64 runner for cross-compilation

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Cygwin
      uses: cygwin/cygwin-install-action@master
      with:
        packages: autoconf make unzip zip git

    - name: Install Visual Studio with ARM64 tools
      run: |
        # Download and install Visual Studio Build Tools with ARM64 support
        Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "vs_buildtools.exe"
        Start-Process -Wait -FilePath "vs_buildtools.exe" -ArgumentList "--quiet --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.Tools.ARM64 --add Microsoft.VisualStudio.Component.VC.CMake.Project --includeRecommended"

    - name: Set up Boot JDK
      run: |
        # Download OpenJDK 24 for Windows x64 as the Boot JDK
        Invoke-WebRequest -Uri "https://download.java.net/java/GA/jdk24/36/jdk-24_windows-x64_bin.zip" -OutFile "jdk-24.zip"
        Expand-Archive -Path "jdk-24.zip" -DestinationPath "C:\Program Files (Arm)\Microsoft\jdk-24"

    - name: Clone OpenJDK repository
      run: |
        git clone https://git.openjdk.org/jdk.git
        cd jdk
        # Get the latest stable release tag (e.g., jdk-23, jdk-24)
        $latest_tag = (git tag --list 'jdk-*' | Sort-Object -Descending { [version]($_ -replace 'jdk-', '') } | Select-Object -First 1)
        git checkout $latest_tag

    - name: Configure Visual Studio environment for ARM64
      run: |
        # Set up the ARM64 cross-compilation environment
        cmd /c "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" x64_arm64

    - name: Configure OpenJDK build
      shell: bash
      run: |
        cd jdk
        ./configure --with-boot-jdk="/cygdrive/c/Program Files (Arm)/Microsoft/jdk-24" --openjdk-target=aarch64-w64-mingw32

    - name: Build OpenJDK
      run: |
        cd jdk
        make images CONF=windows-aarch64-server-release

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: openjdk-windows-arm64
        path: jdk/build/windows-aarch64-server-release/images/jdk